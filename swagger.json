{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "My User Project CRUD",
        "description": "My User Project Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "paths": {
        "/cats": {
            "get": {
                "tags": [
                    "Cats"
                ],
                "summary": "Get all cats in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cats"
                        }
                    }
                }
            }},
            "/cat": { 
            "post":{
                "tags": [
                    "Cats"
                ], 
                "summary": "Create a new  Cat",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"The cat we want to add ",
                        "schema":{
                            "$ref": "#definitions/Cat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    }
                }
            }
        },
        "/cat/{id}":{
            "get":{
                "tags":["Cats"],
                "summary": "get cat with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat id"
                       
                    }
                ], 
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Cat"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update cat with given ID",
                "tags": [
                    "Cats"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat id"
                       
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "Cat with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
                
            },"delete": {
                "summary": "Delete cat with given ID",
                "tags": [
                    "Cats"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Cat with id"
                       
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }

        } ,
         "/person":{
            "get" :{
                "tags":["Persons"],
                "summary": "Get all Persons",
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Persons"
                        }
                    }
                }
            },
            "post":{
                "tags":["Persons"],
                "summary": "Create a new  person",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"The person we want to add ",
                        "schema":{
                            "$ref": "#definitions/Person"
                        }
                    }
                ],
               
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Persons"
                        }
                    }
                }
            }
        },
        "/person/{id}":{
           
            "get": {
                "tags":["Persons"],
                "summary": "get person with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Person with id"
                    }
                ], 
                
               
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Person"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update person with given ID",
                "tags": [
                    "Persons"
                ],
              
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Person with new values of properties"
                       
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "Person with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Person with given ID",
                "tags": [
                    "Persons"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Person with id"
                       
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Person not found."
                    }
                }
            }
        },
        "/persons":{
            
            "get": {
                "tags":["Persons"],
                "summary": "get persons with given search",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"The persons we want to find ",
                        "schema":{
                            "$ref": "#definitions/Person"
                        }
                    }
                ], 
                
               
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Persons"
                        }
                    }
                }
            }
        },
        "/owner":{
            "get" :{
                "tags":["Owners"],
                "summary": "Get all owners",
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Owners"
                        }
                    }
                }
            },
            "post":{
                "tags":["Owners"],
                "summary": "Create a new  owner",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"The owner we want to add ",
                        "schema":{
                            "$ref": "#definitions/Owner"
                        }
                    }
                ],
               
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Owners"
                        }
                    }
                }
            }
        },
        "/owner/{id}":{
            "parameters":[
                {
                    "in":"path",
                    "name":"id",
                    "required":true,
                    "description":"ID of the owner that we want to match ",
                    "type":"string"
                }
            ],
            "get": {
                "tags":["Owners"],
                "summary": "get owner with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "owner with id"
                    }
                ], 
                
               
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#/definitions/Owner"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update owner with given ID",
                "tags": ["Owners"],
               
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Owner  with new values of properties"
                      
                    },
                    
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "Owner with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/owner"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete owner with given ID",
                "tags": [
                    "Owners"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete owner with id"
                      
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. owner not found."
                    }
                }
            }
        },
        "/owners":{
            
            "get": {
                "tags":["Owners"],
                "summary": "get owners with given search",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"The owners we want to find ",
                        "schema":{
                            "$ref": "#definitions/Owner"
                        }
                    }
                ], 
                
              
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Owners"
                        }
                    }
                }
            }
        },
        "/dog":{
            "get" :{
                "tags":["Dogs"],
                "summary": "Get all Dods",
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Dogs"
                        }
                    }
                }
            },
            "post":{
                "tags":["Dogs"],
                "summary": "Create a new  Dog",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"The cat we want to add ",
                        "schema":{
                            "$ref": "#definitions/Dog"
                        }
                    }
                ],
               
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Dogs"
                        }
                    }
                }
            }
        },
        "/dog/{id}":{
            "parameters":[
                {
                    "in":"path",
                    "name":"id",
                    "required":true,
                    "description":"ID of the dog that we want to match ",
                    "type":"string"
                }
            ],
            "get": {
                "summary": "get dog with given id",
                "tags":["Dogs"],                
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Dog with id"
                       
                    }
                ], 
                
            
                "responses":{
                    "200":{
                        "description":"ok",
                        "schema":{
                            "$ref": "#definitions/Dog"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Dog with given ID",
                "tags": [
                    "Dogs"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Dog with new values of properties"
                       
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "Dog with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/Dog"
                        }
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dog"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Dog not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Dog with given ID",
                "tags": [
                    "Dogs"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Cat with id"
                       
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Dog not found."
                    }
                }
            }
        }
        
        

    },
    "definitions": {
        "id":{
            "properties":{
                "uuid":{
                    "type": "string"
                }
            }
        },
        "Cat":{
            "type" : "object",
            "properties":{
                "name": { "type": "string"},
                "age": {"type" : "integer"},
                "type": { "type": "string"}
            }
        },
        "Cats":{
            "type" : "object",
            "properties":{
                "cats":{
                    "type" : "object",
                    "additionalProperties":{
                        "$ref": "#definitions/Cat"
                    }
                }
            }
        },
        "Dog":{
            "type" : "object",
            "properties":{
                "name": { "type": "string"},
                "age": {"type" : "integer"},
                "type": { "type": "string"},
                "color": { "type": "string"}
            }
        },
        "Dogs":{
            "type" : "object",
            "properties":{
                "dogs":{
                    "type" : "object",
                    "additionalProperties":{
                        "$ref": "#definitions/Dog"
                    }
                }
            }
        },
        "Person":{
            "type" : "object",
            "properties":{
                "firstName": { "type": "string"},
                "lastName": { "type": "string"},
                "phoneNumber": {"type" : "integer"},
                "address": { "type": "string"}              
            }
        },
        "Persons":{
            "type" : "object",
            "properties":{
                "cats":{
                    "type" : "object",
                    "additionalProperties":{
                        "$ref": "#definitions/Person"
                    }
                }
            }
        },
        "Owner":{
            "type" : "object",
            "properties":{
                "personId": { "type": "string"},
                "catId": { "type": "string"},
                "dogId": { "type": "string"} 
                
            }
        },
        "Owners":{
            "type" : "object",
            "properties":{
                "cats":{
                    "type" : "object",
                    "additionalProperties":{
                        "$ref": "#definitions/Owner"
                    }
                }
            }
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Cats",
            "description": "API for cats in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ]
}